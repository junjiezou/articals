Git 基础学习
学习目标：
1、配置并初始化一个仓库（repository）
2、开始或停止跟踪（track）文件
3、暂存（stage）或提交（commit)更改
4、如何配置 Git 来忽略指定的文件和文件模式
5、如何迅速而简单地撤销错误操作
6、如何浏览你的项目的历史版本以及不同提交（commits）间的差异
7、如何向你的远程仓库推送（push）以及如何从你的远程仓库拉取（pull）文件。
8、查看修改和暂存区之间的文件差异。
9、移动文件
10、查看历史

1、配置并初始化一个仓库（repository）
	第一种是在现有项目或目录下导入所有文件到 Git 中； 
		git init 		//初始化 Git 仓库
		git add *.c 	//开始跟踪指定文件
		git commit -m 'initial project version' //提交确认
	第二种是从一个服务器克隆一个现有的 Git 仓库。
		git clone [url]		//克隆某个URL下指定的项目到本地库
		eg: git clone https://github.com/libgit2/libgit2
		git clone https://github.com/libgit2/libgit2 mylibgit	//克隆远程仓库的时候，自定义本地仓库的名字

【基础知识】工作目录下的每一个文件都不外乎这两种状态：已跟踪或未跟踪。而工作状态就是：未修改、已修改或已放入暂存区。


2、开始或停止跟踪（track）文件
3、暂存（stage）或提交（commit)更改
	git status	//查看当前分支的文件状态
	git add [file name] //跟踪新文件,这是个多功能命令：可以用它开始跟踪新文件，或者把已跟踪的文件放到暂存区，还能用于合并时把有冲突的文件标记为已解决状态等。每次修改过文件之后都需要用add命令把修改再暂存一遍。
	git commit	//确认暂存区
	git commit -a -m "ok"  //Git 就会自动把所有已经跟踪过的文件暂存起来一并提交，从而跳过 git add 步骤



【基础知识】Changes to be committed:这个提示下方的文件是已经放到暂存区等待提交确认的文件。
			Changes not staged for commit:这个提示下方的文件是新增或者刚修改，而没有暂存的文件。

【基础知识】git status
			git status -s  或者 git status --short
			新添加的未跟踪文件前面有 ?? 标记
			新添加到暂存区中的文件前面有 A 标记
			修改过的文件前面有 M 标记，M 有两个可以出现的位置，出现在右边的 M 表示该文件被修改了但是还没放入暂存区，出现在靠左边的 M 表示该文件被修改了并放入了暂存区。

4、如何配置 Git 来忽略指定的文件和文件模式
	在仓库目录下创建一个名为 .gitignore 的文件，列出要忽略的文件模式。
	所有空行或者以 ＃ 开头的行都会被 Git 忽略。
	可以使用标准的 glob 模式匹配。所谓的 glob 模式是指 shell 所使用的简化了的正则表达式。
	匹配模式可以以（/）开头防止递归。
	匹配模式可以以（/）结尾指定目录。
	要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反。

5、如何迅速而简单地撤销错误操作
	git rm	//只是简单地从工作目录中手工删除文件，即运行 git status 时在 “Changes not staged for commit” 部分显示的文件,git rm 命令后面可以列出文件或者目录的名字，也可以使用 glob 模式。
	git rm	-f //删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f
	git rm --cached	//把文件从 Git 仓库中删除（亦即从暂存区域移除）,但仍然希望保留在当前工作目录中。


8、查看修改和暂存区之间的文件差异。
	git diff	//此命令比较的是工作目录中当前文件和暂存区域快照之间的差异， 也就是修改之后还没有暂存起来的变化内容。
	git diff --cached	//查看已暂存的将要添加到下次提交里的内容

9、移动文件
	git mv file_from file_to	//相当于
									$ mv README.md README
									$ git rm README.md
									$ git add README

10、查看历史
	
