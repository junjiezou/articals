PHP 积累

ob_start()
http://www.jcwcn.com/article-16878-1.html
ob是output buffering的简称，就是输出缓冲区。如果使用了ob_start函数，那么之后的输出内容（echo等）就不进行实际输出，而是存入缓冲区里面，随后可以使用ob_flush实际输出、ob_clean删除、ob_get_contents获得内容保存到静态文件等。
用PHP的ob_start();
控制您的浏览器cache
Output Control 函数可以让你自由控制脚本中数据的输出。它非常地有用，特别是对于：当你想在数据已经输出后，再输出文件头的情况。输出控制函数不对使用 header() 或 setcookie(), 发送的文件头信息产生影响,只对那些类似于 echo() 和 PHP 代码的数据块有作用。
我们先举一个简单的例子，让大家对Output Control有一个大致的印象：
Example 1.
程序代码 程序代码
<?php
ob_start(); //打开缓冲区
echo \"Hellon\"; //输出
header("location:index.php"); //把浏览器重定向到index.php
ob_end_flush();//输出全部内容到浏览器
?>
所有对header()函数有了解的人都知道，这个函数会发送一段文件头给浏览器，但是如果在使用这个函数之前已经有了任何输出（包括空输出，比如空格，回车和换行）就会提示出错。如果我们去掉第一行的ob_start()，再执行此程序，我们会发现得到了一条错误提示："Header had all ready send by"！但是加上ob_start，就不会提示出错，原因是当打开了缓冲区，echo后面的字符不会输出到浏览器，而是保留在服务器，直到你使用 flush或者ob_end_flush才会输出，所以并不会有任何文件头输出的错误！


@
@是PHP提供的错误信息屏蔽的专用符号。
比如在一个函数前使用@
@mysql_query 不会出现Warning，
而原来mysql_query 在遇到错误时会在页面上访提示Warning。


XDebug 安装


